---
import { techs,techsIcons } from "../data/technologies";
import type { Project } from "../types/project";
import { Icon } from 'astro-icon/components';
import { getLangFromUrl } from '../i18n/utils';
const {data} = Astro.props as {data: Project};
const {index} = Astro.props as {index: number};
const lang = getLangFromUrl(Astro.url);
---
<div class="project min-h-[140px] max-h-[140px] overflow-hidden w-full p-4 rounded-lg border dark:border-neutral-800 border-neutral-400 dark:text-white text-[#1F2937] transition duration-300">
     <div class="flex flex-row items-center gap-2 relative">
          <a href={data.web} target="_blank" rel="noreferrer" class="flex flex-row items-center gap-1 hover:dark:text-white   group">
               <h3 class="text-lg md:text-xl font-bold decoration-neutral-500 decoration-dotted underline-offset-[5px] group-hover:underline ">{data.title}</h3>
               <Icon name="mdi:arrow-top-right" class="dark:text-white text-sm group-hover:translate-x-[2px] group-hover:-translate-y-[2px]  transition-transform duration-200 opacity-50"/>
          </a>
          <div class="ml-auto flex flex-row gap-3 relative">
               {
                    data.team !== undefined && data.team.length !== 1 && data.team !== null ? (
                    <button aria-label="buttonTeam" onclick="mostrarTeamDiv(this)" id={'team_'+index} class="flex flex-row items-center gap-1  group">
                    <Icon name="mdi:storm" class="dark:text-white opacity-50 hover:opacity-100 text-2xl"/>

                    </button>
                    <div  class="teamDiv absolute hidden top-[28px] p-1 px-4 bg-white right-0 dark:border-neutral-400 border-neutral-400 border dark:bg-neutral-900  flex-col gap-1 rounded-sm ">
                         <span class="font-bold text-sm text-center border-b">Team</span>
                         <a href={'https://github.com/'+data.team[0]} target="_blank" rel="noreferrer" class="flex flex-row cursor-pointer items-center gap-1 group-hover:dark:text-white group">
                              <span class="text-sm font-semibold decoration-neutral-500 decoration-dotted underline-offset-[5px] group-hover:underline">{data.team[0]}</span>
                              <Icon name="mdi:arrow-top-right" class="dark:text-white text-sm group-hover:translate-x-[2px] group-hover:-translate-y-[2px] transition-transform duration-200 opacity-50"/>
                         </a>

                         <a href={'https://github.com/'+data.team[1]} target="_blank" rel="noreferrer" class="flex flex-row cursor-pointer items-center gap-1 group-hover:dark:text-white group">
                              <span class="text-sm font-semibold decoration-neutral-500 decoration-dotted underline-offset-[5px] group-hover:underline">{data.team[1]}</span>
                              <Icon name="mdi:arrow-top-right" class="dark:text-white text-sm group-hover:translate-x-[2px] group-hover:-translate-y-[2px] transition-transform duration-200 opacity-50"/>
                         </a>
                         
                    </div>
                              
                    ) : null 
               }


               {
                    data.api !== undefined && data.api !== ""&& data.api !== null ? (
                         <a aria-label="api url" href={data.api} target="_blank" rel="noreferrer" class="flex flex-row items-center gap-1 hover:dark:text-white hover:dark:text-opacity-50  group">
                              <Icon name="mdi:api" class="dark:text-white opacity-50 hover:opacity-100 text-2xl"/>
                         </a>
                    ) : null 
               }

               <a aria-label="github url" href={data.url} target="_blank" rel="noreferrer" class="flex flex-row items-center gap-1 hover:dark:text-white hover:dark:text-opacity-50  group">
                    <Icon name="mdi:github" class="dark:text-white opacity-50 hover:opacity-100 text-2xl"/>
               </a>
          </div>
     </div>
     <p class="dark:text-neutral-400">{data?.description?.[lang]}</p>
     <div class="w-auto h-[52px] scroll flex flex-row gap-2 mt-2 max-h-[52px] min-h-[32px] min-w-[251px] overflow-hidden">
          {data?.topics?.map((topic) => {
            const techIndex = Object.values(techs).indexOf(topic);
            const isTechValid = techIndex !== -1 && techIndex !== undefined && topic !== 'Astro';
        
            return (
              <span  class="p-1 px-2 flex flex-row min-w-fit h-fit gap-1 border dark:border-neutral-800 border-neutral-400">
                {isTechValid && (
                  <span class="min-w-[24px] aspect-square">
                    <Icon
                      id="icon"
                      name={techsIcons[techIndex + 1]?.[1]}
                      class="text-2xl text-opacity-50 dark:text-white text-[#1F2937]"
                    />
                  </span>
                )}
                {topic === "Astro" && (
                  <>
                    <Icon id="iconToDark" name="vscode-icons:file-type-astro" class="text-2xl text-opacity-50 hidden" />
                    <Icon id="iconToLight" name="vscode-icons:file-type-light-astro" class="text-2xl text-opacity-50 hidden" />
                  </>
                )}
                <span class="select-none text-center">{topic}</span>
              </span>
            );
          })}
        </div>
        
</div>    

<style media="all" >

.scroll{
     overflow-x: auto;
     overflow-y: hidden;


     /* custom scrollbar */
     ::-webkit-scrollbar {
     width: 20px;
     }

     ::-webkit-scrollbar-track {
     background-color: transparent;
     }

     ::-webkit-scrollbar-thumb {
     background-color: #909596;
     border-radius: 20px;
     border: 6px solid transparent;
     background-clip: content-box;
     }

     ::-webkit-scrollbar-thumb:hover {
     background-color: #757a7b;
     }

}
</style>


<script is:inline>
function mostrarTeamDiv(button) {
  // Obtener el elemento teamDiv correspondiente al botón clicado
  var teamDiv = button.nextElementSibling;

  // Mostrar u ocultar el teamDiv alternativamente cambiando su estilo display
  if (teamDiv) {
    if (teamDiv.style.display === 'flex') {
      // Si está visible, ocultarlo
      teamDiv.style.display = 'none';
    } else {
      // Si está oculto, mostrarlo
      teamDiv.style.display = 'flex';
    }
  }
}


   </script>

   