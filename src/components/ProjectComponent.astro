---
import { techs,techsIcons } from "../data/technologies";
import type { Project } from "../types/project";
import { Icon } from 'astro-icon/components'
const {data} = Astro.props as {data: Project};
import { getLangFromUrl } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);
---
<div class="project min-h-[140px] max-h-[140px] overflow-hidden w-full p-4 rounded-lg border dark:border-neutral-800 border-neutral-400 dark:text-white text-[#1F2937]">
     <div class="flex flex-row items-center gap-2">
          <a href={data.web} target="_blank" class="flex flex-row items-center gap-1 hover:dark:text-white hover:dark:text-opacity-50 hover:text-opacity-50  group">
               <h3 class="text-lg md:text-xl font-bold group-hover:opacity-50">{data.title}</h3>
               <Icon name="mdi:arrow-top-right" class="dark:text-white text-sm group-hover:translate-x-[2px] group-hover:-translate-y-[2px]  transition-transform duration-200 opacity-50"/>
          </a>
          <div class="ml-auto flex flex-row gap-3">
               {
                    data.api !== undefined && data.api !== ""&& data.api !== null ? (
                         <a aria-label="api url" href={data.api} target="_blank" class="flex flex-row items-center gap-1 hover:dark:text-white hover:dark:text-opacity-50  group">
                              <Icon name="mdi:api" class="dark:text-white opacity-50 hover:opacity-100 text-2xl"/>
                         </a>
                    ) : null 
               }

               <a aria-label="github url" href={data.url} target="_blank" class="flex flex-row items-center gap-1 hover:dark:text-white hover:dark:text-opacity-50  group">
                    <Icon name="mdi:github" class="dark:text-white opacity-50 hover:opacity-100 text-2xl"/>
               </a>
          </div>
     </div>
     <p class="dark:text-neutral-400">{data?.description?.[lang]}</p>
     <div class="w-full scroll flex flex-row gap-2 mt-2">
          {data?.topics?.map((topic) => (
            <span  class="p-1 px-2  flex flex-row min-w-fit gap-1 border dark:border-neutral-800 border-neutral-400">
               <span class="min-w-[24px] aspect-square">
                    {
               Object.values(techs).findIndex(value => value === topic) === undefined ||
               Object.values(techs).findIndex(value => value === topic) === -1 ||
               topic === 'Astro' ?
               null :
                <Icon id="icon" name={
                    techsIcons[Object.values(techs).findIndex(value => value === topic)+1][1] === undefined ?
                    null : techsIcons[Object.values(techs).findIndex(value => value === topic)+1][1]
                    
                } class="text-2xl text-opacity-50 dark:text-white text-[#1F2937]" />
               }
               {
                    topic === "Astro" ?
                    <Icon id="iconToDark" name="vscode-icons:file-type-astro" class="text-2xl text-opacity-50 hidden" />
                : null}
                
                {
                    topic === "Astro" ?
                    <Icon id="iconToLight" name="vscode-icons:file-type-light-astro" class="text-2xl text-opacity-50 hidden" />
                : null}

               </span>
           
             <span class="select-none">{topic}</span>
            </span>
          ))}
     </div>
</div>    

<style media="all" >

.scroll{
     overflow-x: auto;
     overflow-y: hidden;


     /* custom scrollbar */
     ::-webkit-scrollbar {
     width: 20px;
     }

     ::-webkit-scrollbar-track {
     background-color: transparent;
     }

     ::-webkit-scrollbar-thumb {
     background-color: #909596;
     border-radius: 20px;
     border: 6px solid transparent;
     background-clip: content-box;
     }

     ::-webkit-scrollbar-thumb:hover {
     background-color: #757a7b;
     }

}
</style>

